{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_getNative.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","inverse","a","bool","color","string","block","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","baseIsNative","getValue","key","value","undefined","CardHeader","process","d","Doughnut","Line","Bar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","values","destroy","render","_props3","id","onClick","Component","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","_idMaker","Math","random","toString","_canvasId","_setCanvasId","tooltip","document","getElementById","parentNode","appendChild","opacity","classList","remove","yAlign","add","titleLines","title","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","item","lines","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","left","caretX","top","caretY","defineProperty","factory","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","get","has","eq","array","nativeCreate","getNative","isKeyable","__data__","isSymbol","INFINITY","result","webpackPolyfill","deprecate","paths","children","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","right","bottom","moveTo","arc","closePath","rect","drawPoint","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","addResizeListener","expando","resizer","expand","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","labelTextColors","_eventPosition","itemSort","dataPoints","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/0.ad93c049.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, deprecated, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  block: deprecated(PropTypes.bool, 'Please use the props \"body\"'),\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      block = props.block,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"block\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, block || body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}